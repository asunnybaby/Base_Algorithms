/*
**循环打印矩阵
*/
#include<iostream>
using namespace std;
 
void PrintMatrixInCircle(int** numbers, int columns, int rows, int start);
void printNumber(int number);
 
//顺时针打印矩阵
void PrintMatrixClockwisely(int** numbers, int cols, int rows)
{
	if (numbers == NULL || cols <= 0 || rows <= 0)
	{
		return;
	}
 
	int start = 0;
 
	while (cols>start*2&&rows>start*2)
	{
		PrintMatrixInCircle(numbers, cols, rows, start);
		start++;
	}
}
 
//在圆圈中打印矩阵，打印一圈分4种情况:一步，二步，三步，四步
void PrintMatrixInCircle(int** numbers, int cols, int rows, int start)
{
	int endX = cols - 1 - start;
	int endY = rows - 1 - start;
 
	// 从左到右打印一行
	for (int i = start; i <= endX; i++)
	{
		int number = numbers[start][i];
		printNumber(number);
	}
    //从上到下打印一列
	if (start < endY)
	{
		for (int i = start + 1; i <= endY; i++)
		{
			int number = numbers[i][endX];
			printNumber(number);
		}
	}
	// 从右到左打印一行
	if (start < endX&&start < endY)
	{
		for (int i = endX - 1; i >= start; i--)
		{
			int number = numbers[endY][i];
			printNumber(number);
		}
	}
	// 从下到上打印一行
	if (start < endX&&start < endY - 1)
	{
		for (int i = endY - 1; i >= start+1; i--)
		{
			int number = numbers[i][start];
			printNumber(number);
		}
	}
 
}
 
//打印数字
void printNumber(int number)
{
	cout<<number<<"   ";
}
 
// ====================测试代码====================
void Test(int cols, int rows)
{
	cout << "Test Begin:" << cols << " cols," << rows << " rows." << endl;
 
	if (cols < 1 || rows < 1)
	{
		return;
	}
	
	int** numbers = new int*[rows];
	for (int i = 0; i < rows; i++)
	{
		numbers[i] = new int[cols];
		for (int j = 0; j < cols; j++)
		{
			numbers[i][j] = i * cols + j + 1;
		}
	}
 
	PrintMatrixClockwisely(numbers, cols, rows);
	cout << endl;
 
	for (int i = 0; i < rows; ++i)
		delete[](int*)numbers[i];
 
	delete[] numbers;
}
 
int main()
{
	/*
	1
	*/
	Test(1, 1);
 
	/*
	1    2
	3    4
	*/
	Test(2, 2);
 
	/*
	1     2    3    4
	5     6    7    8
	9    10   11    12
	13   14   15    16
	*/
	Test(4, 4);
 
	/*
	1    2    3    4    5
	6    7    8    9    10
	11   12   13   14   15
	16   17   18   19   20
	21   22   23   24   25
	*/
	Test(5, 5);
 
	/*
	1
	2
	3
	4
	5
	*/
	Test(1, 5);
 
	/*
	1    2
	3    4
	5    6
	7    8
	9    10
	*/
	Test(2, 5);
 
	/*
	1    2    3
	4    5    6
	7    8    9
	10   11   12
	13   14   15
	*/
	Test(3, 5);
 
	/*
	1    2    3      4
	5    6    7      8
	9    10   11    12
	13   14   15    16
	17   18   19    20
	*/
	Test(4, 5);
 
	/*
	1    2    3    4    5
	*/
	Test(5, 1);
 
	/*
	1    2    3    4    5
	6    7    8    9    10
	*/
	Test(5, 2);
 
	/*
	1    2    3    4      5
	6    7    8    9     10
	11   12   13   14    15
	*/
	Test(5, 3);
 
	/*
	1    2    3    4    5
	6    7    8    9    10
	11   12   13   14   15
	16   17   18   19   20
	*/
	Test(5, 4);
 
	system("pause");
	return 0;

