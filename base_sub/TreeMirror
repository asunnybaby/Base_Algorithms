/**
*操作给定的二叉树，将其变换为源二叉树的镜像。 
输入描述: 
二叉树的镜像定义：源二叉树 
8 
/ \ 
6 10 
/ \ / \ 
5 7 9 11 
镜像二叉树 
8 
/ \ 
10 6 
/ \ / \ 
11 9 7 5
*
public class TreeNode {
    int val = 0;
    TreeNode left = null;
    TreeNode right = null;

    public TreeNode(int val) {
        this.val = val;

    }

}
*/
public class Solution {
    public void Mirror(TreeNode root) {
        if(root == null){
            return;
        }
        TreeNode left = root.left;
        TreeNode right = root.right;
        if(left==null&&right==null){
            return;
        }
        root.left = right;
        root.right = left;
        if(root.left!=null){
            Mirror(root.left);
        }
        if(root.right!=null){
            Mirror(root.right);
        }
    }
}
--------------------- 
作者：十一月上 
来源：CSDN 
原文：https://blog.csdn.net/xdzhouxin/article/details/81123930 
版权声明：本文为博主原创文章，转载请附上博文链接！
